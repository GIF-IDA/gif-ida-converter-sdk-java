<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:include schemaLocation="types_file.xsd"/>

  <xs:element name="data">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Data">
          <xs:assert test="count(/data/Properties) = 1" />
          <xs:assert test="count(/data/Accounts)  = 0" />
          <xs:assert test="count(/data/Companies)  = 0" />
          
          <xs:assert test="count(//Property)  >= 0" />
          <xs:assert test="count(//ServiceContract)  >= 0" />
          <xs:assert test="count(//Building) >= 0" />
          <xs:assert test="count(//Lease) >= 0" />
          <xs:assert test="count(//Unit)  >= 0" />
          <xs:assert test="count(//Account)   = 0" />
          <xs:assert test="count(//BookEntry)  = 0" />
          <xs:assert test="count(//Company)   = 0" />
          <xs:assert test="count(//Land)  = 0" />
          <xs:assert test="count(//Project)  = 0" />
          <xs:assert test="count(//Record)   = 0" />
          <xs:assert test="count(//Term)  = 0" />
          <xs:assert test="count(//Valuation)   = 0" />
          
          <xs:assert test="count(//Property[@objectIdSender]) = count(//Property)" />
          <xs:assert test="count(//Property[@validFrom]) = count(//Property)" />
          <xs:assert test="count(//Property[archValidFrom]) = count(//Property)" />
          <xs:assert test="count(//Property[archValidTo]) = count(//Property)" />
          <xs:assert test="count(//Property[monumentProtectionCategory]) = count(//Property)" />
          <xs:assert test="count(//Property[areaType]) = count(//Property)" />
          <xs:assert test="count(//Property[areaMeasurement]) = count(//Property)" />
          <xs:assert test="count(//Property[currency]) = count(//Property)" />
          <xs:assert test="count(//Property/address) = count(//Property)" />
          <xs:assert test="count(//Property/address[housenumber]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[street]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[city]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[country]) = count(//Property/address)" />
          <xs:assert test="count(//Property[useTypePrimary]) = 0" />
          <xs:assert test="count(//Property[useTypeSecondary]) = 0" />
          <xs:assert test="count(//Property/address[isPublic]) = 0" />
          <xs:assert test="count(//Property[numberOfBathrooms]) = 0" />
          <xs:assert test="count(//Property[numberOfCanteen]) = 0" />
          <xs:assert test="count(//Property[ownershipType]) = 0" />
          <xs:assert test="count(//Property[assetManager]) = 0" />
          <xs:assert test="count(//Property[elevator]) = 0" />
          <xs:assert test="count(//Property[interiorQuality]) = 0" />
          <xs:assert test="count(//Property[balcony]) = 0" />
          <xs:assert test="count(//Property[cellar]) = 0" />
          <xs:assert test="count(//Property[airconditioning]) = 0" />
          <xs:assert test="count(//Property[barrierfree]) = 0" />
          <xs:assert test="count(//Property[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Property[assetValue]) = 0" />
          <xs:assert test="count(//Property[lanCables]) = 0" />
          <xs:assert test="count(//Property[ownerOccupation]) = 0" />
          <xs:assert test="count(//Property/energyRating[energyEfficiencyClass]) = 0" />
          <xs:assert test="count(//Property[distanceToRailStation]) = 0" />
          <xs:assert test="count(//Property[distanceToAirport]) = 0" />
          <xs:assert test="count(//Property[distanceToPublicTransport]) = 0" />
          <xs:assert test="count(//Property[distanceToHighway]) = 0" />
          <xs:assert test="count(//Property[locationClassificationType]) = 0" />
          <xs:assert test="count(//Property[groundRent]) = 0" />
          <xs:assert test="count(//Property[titleOfExposee]) = 0" />
          <xs:assert test="count(//Property[facilityManager]) = 0" />
          <xs:assert test="count(//Property[totalGrossCosts]) = 0" />
          <xs:assert test="count(//Property[totalNetCosts]) = 0" />
          <xs:assert test="count(//Property[totalApportionableCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseTransferTax]) = 0" />
          <xs:assert test="count(//Property[saleTransferTax]) = 0" />
          <xs:assert test="count(//Property[heatingType]) = 0" />
          <xs:assert test="count(//Property[ipdObjectId]) = 0" />
          <xs:assert test="count(//Property[ipdPortfolioId]) = 0" />
          <xs:assert test="count(//Property[retailLocation]) = 0" />
          <xs:assert test="count(//Property[maintenanceCosts]) = 0" />
          <xs:assert test="count(//Property[capitalIncome]) = 0" />
          <xs:assert test="count(//Property[vacancyOperatingCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseBrokerage]) = 0" />
          <xs:assert test="count(//Property[saleBrokerage]) = 0" />
          <xs:assert test="count(//Property[marketRentalValue]) = 0" />
          <xs:assert test="count(//Property[netIncome]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeMain]) = 0" />
          <xs:assert test="count(//Property[saleNetPrice]) = 0" />
          <xs:assert test="count(//Property[note]) = 0" />
          <xs:assert test="count(//Property[protfolioType]) = 0" />
          <xs:assert test="count(//Property[courtage]) = 0" />
          <xs:assert test="count(//Property[purchaseLegalFees]) = 0" />
          <xs:assert test="count(//Property[riskStyle]) = 0" />
          <xs:assert test="count(//Property[purchaseAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property[otherCosts]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeAdditional]) = 0" />
          <xs:assert test="count(//Property[saleAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property[partialPurchase]) = 0" />
          <xs:assert test="count(//Property[partialSales]) = 0" />
          <xs:assert test="count(//Property[saleDate]) = 0" />
          <xs:assert test="count(//Property[fairValue]) = 0" />
          <xs:assert test="count(//Property[rented]) = 0" />
          <xs:assert test="count(//Property[purchaseNetPrice]) = 0" />
          <xs:assert test="count(//Property[leasedArea]) = 0" />
          <xs:assert test="count(//Property[assetCategory]) = 0" />
          <xs:assert test="count(//Property[administrationCosts]) = 0" />
          <xs:assert test="count(//Property[valueIncreasingReconstructCosts]) = 0" />
          
          <xs:assert test="count(//Building[@objectIdSender]) = count(//Building)" />
          <xs:assert test="count(//Building[@validFrom]) = count(//Building)" />
          <xs:assert test="count(//Building[archValidFrom]) = count(//Building)" />
          <xs:assert test="count(//Building[archValidTo]) = count(//Building)" />
          <xs:assert test="count(//Building[monumentProtectionCategory]) = count(//Building)" />
          <xs:assert test="count(//Building[areaType]) = count(//Building)" />
          <xs:assert test="count(//Building[areaMeasurement]) = count(//Building)" />
          <xs:assert test="count(//Building/address) = count(//Building)" />
          <xs:assert test="count(//Building/address[housenumber]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[street]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[city]) = count(//Building/address)" />
          <xs:assert test="count(//Building[useTypePrimary]) = 0" />
          <xs:assert test="count(//Building[useTypeSecondary]) = 0" />
          <xs:assert test="count(//Building/address[isPublic]) = 0" />
          <xs:assert test="count(//Building[numberOfBathrooms]) = 0" />
          <xs:assert test="count(//Building[airconditioning]) = 0" />
          <xs:assert test="count(//Building[numberOfBedrooms]) = 0" />
          <xs:assert test="count(//Building[numberOfCanteen]) = 0" />
          <xs:assert test="count(//Building[elevator]) = 0" />
          <xs:assert test="count(//Building[interiorQuality]) = 0" />
          <xs:assert test="count(//Building[balcony]) = 0" />
          <xs:assert test="count(//Building[barrierfree]) = 0" />
          <xs:assert test="count(//Building[energySource]) = 0" />
          <xs:assert test="count(//Building[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Building[lanCables]) = 0" />
          <xs:assert test="count(//Building[floorload]) = 0" />
          <xs:assert test="count(//Building[ownerOccupation]) = 0" />
          <xs:assert test="count(//Building/energyRating[energyEfficiencyClass]) = 0" />
          <xs:assert test="count(//Building[guestToilet]) = 0" />
          <xs:assert test="count(//Building[courtage]) = 0" />
          <xs:assert test="count(//Building[ramp]) = 0" />
          <xs:assert test="count(//Building[riskStyle]) = 0" />
          <xs:assert test="count(//Building[highVoltage]) = 0" />
          <xs:assert test="count(//Building[rented]) = 0" />
          
          <xs:assert test="count(//Unit[@objectIdSender]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[@validFrom]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[archValidFrom]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[archValidTo]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[areaType]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[areaMeasurement]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[endPriceMaintenance]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[useType]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[lettableUnits]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[lettableArea]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[summerResidencePractical]) = 0" />
          <xs:assert test="count(//Unit[numberOfBathrooms]) = 0" />
          <xs:assert test="count(//Unit[numberOfBedrooms]) = 0" />
          <xs:assert test="count(//Unit[interiorQuality]) = 0" />
          <xs:assert test="count(//Unit[balcony]) = 0" />
          <xs:assert test="count(//Unit[barrierfree]) = 0" />
          <xs:assert test="count(//Unit[lanCables]) = 0" />
          <xs:assert test="count(//Unit[hasBuiltinKitchen]) = 0" />
          <xs:assert test="count(//Unit[isLodgerFlat]) = 0" />
          <xs:assert test="count(//Unit/energyRating[date]) = 0" />
          <xs:assert test="count(//Unit/energyRating[energyEfficiencyClass]) = 0" />
          <xs:assert test="count(//Unit/energyRating[energyConsumption]) = 0" />
          <xs:assert test="count(//Unit[titleOfExposee]) = 0" />
          <xs:assert test="count(//Unit[garden]) = 0" />
          <xs:assert test="count(//Unit[guestToilet]) = 0" />
          <xs:assert test="count(//Unit[hallHeight]) = 0" />
          <xs:assert test="count(//Unit[autoLift]) = 0" />
          <xs:assert test="count(//Unit/address[floorLocation]) = 0" />
          <xs:assert test="count(//Unit[maxNumberOfPerson]) = 0" />
          <xs:assert test="count(//Unit[hasFurniture]) = 0" />
          <xs:assert test="count(//Unit[nonSmoker]) = 0" />
          <xs:assert test="count(//Unit[parkingSpaceType]) = 0" />
          <xs:assert test="count(//Unit[courtage]) = 0" />
          <xs:assert test="count(//Unit[minimumDivisible]) = 0" />
          <xs:assert test="count(//Unit[certificateOfEligibility]) = 0" />
          <xs:assert test="count(//Unit[apartmentType]) = 0" />

          <xs:assert test="count(//Lease[@objectIdSender]) = count(//Lease)" />
          <xs:assert test="count(//Lease[@validFrom]) = count(//Lease)" />
          <xs:assert test="count(//Lease[depositIncreaseType]) = count(//Lease)" />
          <xs:assert test="count(//Lease[beginRentPayment]) = count(//Lease)" />
          <xs:assert test="count(//Lease[payment]) = count(//Lease)" />
          <xs:assert test="count(//Lease[operatingCostPrepayment]) = count(//Lease)" />
          <xs:assert test="count(//Lease[debitor]) = count(//Lease)" />
          <xs:assert test="count(//Lease[debitorId]) = count(//Lease)" />
          <xs:assert test="count(//Lease[depositAgreed]) = count(//Lease)" />
          <xs:assert test="count(//Lease[depositType]) = count(//Lease)" />
          <xs:assert test="count(//Lease[depositAmount]) = count(//Lease)" />
          <xs:assert test="count(//Lease[depositPayed]) = count(//Lease)" />
          <xs:assert test="count(//Lease[terminationDuration]) = count(//Lease)" />
          <xs:assert test="count(//Lease[dunningLevel]) = count(//Lease)" />
          <xs:assert test="count(//Lease[leaseBeginDate]) = count(//Lease)" />
          <xs:assert test="count(//Lease[leaseEndDate]) = count(//Lease)" />
          <xs:assert test="count(//Lease[option]) = count(//Lease)" />
          <xs:assert test="count(//Lease[breakOption]) = count(//Lease)" />
          <xs:assert test="count(//Lease[contractCompletionDate]) = count(//Lease)" />
          <xs:assert test="count(//Lease[dmiendOption]) = count(//Lease)" />
          <xs:assert test="count(//Lease[currency]) = count(//Lease)" />
          <xs:assert test="count(//Lease[paymentPattern]) = count(//Lease)" />
          <xs:assert test="count(//Lease[dunningIndicator]) = count(//Lease)" />
          <xs:assert test="count(//Lease[openItems]) = count(//Lease)" />
          <xs:assert test="count(//Lease[minRentalTime]) = count(//Lease)" />
          <xs:assert test="count(//Lease[maxRentalTime]) = 0" />
          <xs:assert test="count(//Lease[acceptedTerminationtDate]) = 0" />
          <xs:assert test="count(//Lease[badDebt]) = 0" />
          <xs:assert test="count(//Lease[freeFrom]) = 0" />
          <xs:assert test="count(//Lease[terminationReceiptDate]) = 0" />
          <xs:assert test="count(//Lease[leaseContractType]) = 0" />
          <xs:assert test="count(//Lease[terminated]) = 0" />
          <xs:assert test="count(//Lease[petsAllowed]) = 0" />
          <xs:assert test="count(//Lease[tenancy]) = 0" />
          <xs:assert test="count(//Lease[heatingCosts]) = 0" />
          <xs:assert test="count(//Lease[maxNumberOfPerson]) = 0" />
          <xs:assert test="count(//Lease[nation]) = 0" />
          <xs:assert test="count(//Lease[parkingSpaceCosts]) = 0" />
          <xs:assert test="count(//Lease[courtage]) = 0" />

          <xs:assert test="count(//Term[@objectIdSender]) = count(//Term)" />
          <xs:assert test="count(//Term[@validFrom]) = count(//Term)" />
          <xs:assert test="count(//Term[absoluteAmount]) = count(//Term)" />
          <xs:assert test="count(//Term[incomeLoss]) = count(//Term)" />
          <xs:assert test="count(//Term[lastRentAdjustmentDate]) = count(//Term)" />
          <xs:assert test="count(//Term[deltaGraduatedRent]) = count(//Term)" />
          <xs:assert test="count(//Term[rentIncreaseType]) = count(//Term)" />
          <xs:assert test="count(//Term[depositIncreaseType]) = count(//Term)" />
          <xs:assert test="count(//Term[baseIndex]) = count(//Term)" />
          <xs:assert test="count(//Term[indexBaseYear]) = count(//Term)" />
          <xs:assert test="count(//Term[indexAdjustmentBegin]) = count(//Term)" />
          <xs:assert test="count(//Term[beginningRentConsession]) = count(//Term)" />
          <xs:assert test="count(//Term[graduateRentBegin]) = count(//Term)" />
          <xs:assert test="count(//Term[payment]) = count(//Term)" />
          <xs:assert test="count(//Term[endRentConcession]) = count(//Term)" />
          <xs:assert test="count(//Term[indexModificationMethod]) = count(//Term)" />
          <xs:assert test="count(//Term[indexAdjustmentDirection]) = count(//Term)" />
          <xs:assert test="count(//Term[indexRow]) = count(//Term)" />
          <xs:assert test="count(//Term[depositAgreed]) = count(//Term)" />
          <xs:assert test="count(//Term[depositType]) = count(//Term)" />
          <xs:assert test="count(//Term[depositAmount]) = count(//Term)" />
          <xs:assert test="count(//Term[depositPayed]) = count(//Term)" />
          <xs:assert test="count(//Term[conditionAmount]) = count(//Term)" />
          <xs:assert test="count(//Term[terminationDuration]) = count(//Term)" />
          <xs:assert test="count(//Term[indexCountry]) = count(//Term)" />
          <xs:assert test="count(//Term[indexAdjustmentValueType]) = count(//Term)" />
          <xs:assert test="count(//Term[rentAdjustmentFrequence]) = count(//Term)" />
          <xs:assert test="count(//Term[rentIncreasePercentage]) = count(//Term)" />
          <xs:assert test="count(//Term[rentConcession]) = count(//Term)" />
          <xs:assert test="count(//Term[indexMinimumAdjustmentInPercent]) = count(//Term)" />
          <xs:assert test="count(//Term[indexMinimumAdjustmentInPoints]) = count(//Term)" />
          <xs:assert test="count(//Term[optRate]) = count(//Term)" />
          <xs:assert test="count(//Term[breakOption]) = count(//Term)" />
          <xs:assert test="count(//Term[contractCompletionDate]) = count(//Term)" />
          <xs:assert test="count(//Term[dmiendOption]) = count(//Term)" />
          <xs:assert test="count(//Term[leasedArea]) = count(//Term)" />
          <xs:assert test="count(//Term[indexPassthrough]) = count(//Term)" />
          <xs:assert test="count(//Term[currency]) = count(//Term)" />
          <xs:assert test="count(//Term[conditionType]) = count(//Term)" />
          <xs:assert test="count(//Term[heatingCostsInServiceCharge]) = 0" />
          <xs:assert test="count(//Term[interiorQuality]) = 0" />
          <xs:assert test="count(//Term[occupancyState]) = 0" />
          <xs:assert test="count(//Term[freeFrom]) = 0" />
          <xs:assert test="count(//Term[rentAdjustmentDate]) = 0" />
          <xs:assert test="count(//Term[terminationReceiptDate]) = 0" />
          <xs:assert test="count(//Term[terminated]) = 0" />
          <xs:assert test="count(//Term[heatingCosts]) = 0" />
          <xs:assert test="count(//Term[vacancyDuration]) = 0" />
          <xs:assert test="count(//Term[parkingSpaceCosts]) = 0" />
          <xs:assert test="count(//Term[contractOption]) = 0" />

          <xs:assert test="count(//ServiceContract[@objectIdSender]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[@validFrom]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[paymentsPerYear]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[netAmountPerPayment]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[contractCompletionDate]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[firstPaymentDate]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[paymentPattern]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[terminationLegitDeadline]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[terminated]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[creditor]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[specifications]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[serviceType]) = count(//ServiceContract)" />
          <xs:assert test="count(//ServiceContract[contractOption]) = count(//ServiceContract)" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
