<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:include schemaLocation="../model/types_file.xsd"/>

  <xs:element name="data">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Data">
          <xs:assert test="count(/data/Properties) = 1" />
          <xs:assert test="count(/data/Accounts)  = 0" />
          <xs:assert test="count(/data/Companies)  = 0" />
          
          <xs:assert test="count(//Project)  >= 0" />
          <xs:assert test="count(//Property)  >= 0" />
          <xs:assert test="count(//Account)   = 0" />
          <xs:assert test="count(//BookEntry)  = 0" />
          <xs:assert test="count(//Building) = 0" />
          <xs:assert test="count(//Company)   = 0" />
          <xs:assert test="count(//Land)  = 0" />
          <xs:assert test="count(//Lease) = 0" />
          <xs:assert test="count(//Record)   = 0" />
          <xs:assert test="count(//ServiceContract)  = 0" />
          <xs:assert test="count(//Term)  = 0" />
          <xs:assert test="count(//Unit)  = 0" />
          <xs:assert test="count(//Valuation)   = 0" />
          
          
          <xs:assert test="count(//Project[@objectIdSender]) = count(//Project)" />
          <xs:assert test="count(//Project[@validFrom]) = count(//Project)" />
          <xs:assert test="count(//Project[craft]) = count(//Project)" />
          <xs:assert test="count(//Project[contractAmount]) = count(//Project)" />
          <xs:assert test="count(//Project[description]) = count(//Project)" />
          <xs:assert test="count(//Project[budget]) = count(//Project)" />
          <xs:assert test="count(//Project[invoiceAmount]) = count(//Project)" />
          <xs:assert test="count(//Project[projectType]) = count(//Project)" />
          <xs:assert test="count(//Project[currency]) = count(//Project)" />
          <xs:assert test="count(//Project[accountingType]) = count(//Project)" />
          
          <xs:assert test="count(//Property[@objectIdSender]) = count(//Property)" />
          <xs:assert test="count(//Property[@validFrom]) = count(//Property)" />
          <xs:assert test="count(//Property[currency]) = count(//Property)" />
          <xs:assert test="count(//Property[operatingCostsSettled]) = 0" />
          <xs:assert test="count(//Property[archValidFrom]) = 0" />
          <xs:assert test="count(//Property[archValidTo]) = 0" />
          <xs:assert test="count(//Property/address[isPublic]) = 0" />
          <xs:assert test="count(//Property[purchaseDate]) = 0" />
          <xs:assert test="count(//Property[assetAccountType]) = 0" />
          <xs:assert test="count(//Property[numberOfBathrooms]) = 0" />
          <xs:assert test="count(//Property[numberOfRooms]) = 0" />
          <xs:assert test="count(//Property[numberOfCanteen]) = 0" />
          <xs:assert test="count(//Property[ownershipType]) = 0" />
          <xs:assert test="count(//Property[assetManager]) = 0" />
          <xs:assert test="count(//Property[elevator]) = 0" />
          <xs:assert test="count(//Property[interiorQuality]) = 0" />
          <xs:assert test="count(//Property[balcony]) = 0" />
          <xs:assert test="count(//Property[barrierfree]) = 0" />
          <xs:assert test="count(//Property[operatingCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseGrossPrice]) = 0" />
          <xs:assert test="count(//Property[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Property[assetValue]) = 0" />
          <xs:assert test="count(//Property[lanCables]) = 0" />
          <xs:assert test="count(//Property[monumentProtectionCategory]) = 0" />
          <xs:assert test="count(//Property[ownerOccupation]) = 0" />
          <xs:assert test="count(//Property[ownershipShare]) = 0" />
          <xs:assert test="count(//Property/energyRating[energyEfficiencyClass]) = 0" />
          <xs:assert test="count(//Property[distanceToRailStation]) = 0" />
          <xs:assert test="count(//Property[distanceToAirport]) = 0" />
          <xs:assert test="count(//Property[distanceToPublicTransport]) = 0" />
          <xs:assert test="count(//Property[distanceToHighway]) = 0" />
          <xs:assert test="count(//Property[groundRent]) = 0" />
          <xs:assert test="count(//Property[titleOfExposee]) = 0" />
          <xs:assert test="count(//Property[facilityManager]) = 0" />
          <xs:assert test="count(//Property[areaType]) = 0" />
          <xs:assert test="count(//Property[areaMeasurement]) = 0" />
          <xs:assert test="count(//Property/address[latitude]) = 0" />
          <xs:assert test="count(//Property/address[longitude]) = 0" />
          <xs:assert test="count(//Property[totalGrossCosts]) = 0" />
          <xs:assert test="count(//Property[totalNetCosts]) = 0" />
          <xs:assert test="count(//Property[totalApportionableCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseTransferTax]) = 0" />
          <xs:assert test="count(//Property[saleTransferTax]) = 0" />
          <xs:assert test="count(//Property[plotArea]) = 0" />
          <xs:assert test="count(//Property[useTypePrimary]) = 0" />
          <xs:assert test="count(//Property[heatingType]) = 0" />
          <xs:assert test="count(//Property[ipdObjectId]) = 0" />
          <xs:assert test="count(//Property[ipdPortfolioId]) = 0" />
          <xs:assert test="count(//Property[retailLocation]) = 0" />
          <xs:assert test="count(//Property[maintenanceCosts]) = 0" />
          <xs:assert test="count(//Property[capitalIncome]) = 0" />
          <xs:assert test="count(//Property[cellar]) = 0" />
          <xs:assert test="count(//Property[airconditioning]) = 0" />
          <xs:assert test="count(//Property[locationClassificationType]) = 0" />
          <xs:assert test="count(//Property[vacancyOperatingCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseBrokerage]) = 0" />
          <xs:assert test="count(//Property[saleBrokerage]) = 0" />
          <xs:assert test="count(//Property[marketRentalValue]) = 0" />
          <xs:assert test="count(//Property[lastRefurbishmentDate]) = 0" />
          <xs:assert test="count(//Property[modernisationStatus]) = 0" />
          <xs:assert test="count(//Property[useTypeSecondary]) = 0" />
          <xs:assert test="count(//Property[netIncome]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeMain]) = 0" />
          <xs:assert test="count(//Property[purchaseNetPrice]) = 0" />
          <xs:assert test="count(//Property[saleNetPrice]) = 0" />
          <xs:assert test="count(//Property[note]) = 0" />
          <xs:assert test="count(//Property[condition]) = 0" />
          <xs:assert test="count(//Property[portfolioName]) = 0" />
          <xs:assert test="count(//Property[protfolioType]) = 0" />
          <xs:assert test="count(//Property[portfolioPartName]) = 0" />
          <xs:assert test="count(//Property[propertyManager]) = 0" />
          <xs:assert test="count(//Property[courtage]) = 0" />
          <xs:assert test="count(//Property[purchaseLegalFees]) = 0" />
          <xs:assert test="count(//Property/address[region]) = 0" />
          <xs:assert test="count(//Property[riskStyle]) = 0" />
          <xs:assert test="count(//Property[purchaseAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property[otherCosts]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeAdditional]) = 0" />
          <xs:assert test="count(//Property[saleAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property/address[district]) = 0" />
          <xs:assert test="count(//Property[partialPurchase]) = 0" />
          <xs:assert test="count(//Property[partialSales]) = 0" />
          <xs:assert test="count(//Property[saleDate]) = 0" />
          <xs:assert test="count(//Property[fairValue]) = 0" />
          <xs:assert test="count(//Property[rented]) = 0" />
          <xs:assert test="count(//Property[leasedArea]) = 0" />
          <xs:assert test="count(//Property[assetCategory]) = 0" />
          <xs:assert test="count(//Property[administrationCosts]) = 0" />
          <xs:assert test="count(//Property[valueIncreasingReconstructCosts]) = 0" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
