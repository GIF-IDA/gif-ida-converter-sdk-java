<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:include schemaLocation="types_file.xsd"/>

  <xs:element name="data">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Data">
          <xs:assert test="count(/data/Properties) = 1" />
          <xs:assert test="count(/data/Accounts)  = 0" />
          <xs:assert test="count(/data/Companies)  = 0" />
          
          <xs:assert test="count(//Property)  >= 0" />
          <xs:assert test="count(//Building) >= 0" />
          <xs:assert test="count(//Land)  >= 0" />
          <xs:assert test="count(//Unit)  >= 0" />
          <xs:assert test="count(//Account)   = 0" />
          <xs:assert test="count(//BookEntry)  = 0" />
          <xs:assert test="count(//Company)   = 0" />
          <xs:assert test="count(//Project)  = 0" />
          <xs:assert test="count(//Record)   = 0" />
          <xs:assert test="count(//ServiceContract)  = 0" />
          <xs:assert test="count(//Lease) = 0" />
          <xs:assert test="count(//Term)  = 0" />
          <xs:assert test="count(//Valuation)   = 0" />
          
          <xs:assert test="count(//Property[@objectIdSender]) = count(//Property)" />
          <xs:assert test="count(//Property[@validFrom]) = count(//Property)" />
          <xs:assert test="count(//Property[numberOfRooms]) = count(//Property)" />
          <xs:assert test="count(//Property[monumentProtectionCategory]) = count(//Property)" />
          <xs:assert test="count(//Property[ownershipShare]) = count(//Property)" />
          <xs:assert test="count(//Property[titleOfExposee]) = count(//Property)" />
          <xs:assert test="count(//Property[areaMeasurement]) = count(//Property)" />
          <xs:assert test="count(//Property[plotArea]) = count(//Property)" />
          <xs:assert test="count(//Property[heatingType]) = count(//Property)" />
          <xs:assert test="count(//Property[airconditioning]) = count(//Property)" />
          <xs:assert test="count(//Property[courtage]) = count(//Property)" />
          <xs:assert test="count(//Property[currency]) = count(//Property)" />
          <xs:assert test="count(//Property/address) = count(//Property)" />
          <xs:assert test="count(//Property/address[isPublic]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[housenumber]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[street]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[zip]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[city]) = count(//Property/address)" />
          <xs:assert test="count(//Property/address[country]) = count(//Property/address)" />
          <xs:assert test="count(//Property[operatingCostsSettled]) = 0" />
          <xs:assert test="count(//Property[assetAccountType]) = 0" />
          <xs:assert test="count(//Property[ownershipType]) = 0" />
          <xs:assert test="count(//Property[assetManager]) = 0" />
          <xs:assert test="count(//Property[operatingCosts]) = 0" />
          <xs:assert test="count(//Property[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Property[assetValue]) = 0" />
          <xs:assert test="count(//Property[ownerOccupation]) = 0" />
          <xs:assert test="count(//Property[groundRent]) = 0" />
          <xs:assert test="count(//Property[facilityManager]) = 0" />
          <xs:assert test="count(//Property[totalGrossCosts]) = 0" />
          <xs:assert test="count(//Property[totalNetCosts]) = 0" />
          <xs:assert test="count(//Property[totalApportionableCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseTransferTax]) = 0" />
          <xs:assert test="count(//Property[saleTransferTax]) = 0" />
          <xs:assert test="count(//Property[useTypePrimary]) = 0" />
          <xs:assert test="count(//Property[ipdObjectId]) = 0" />
          <xs:assert test="count(//Property[ipdPortfolioId]) = 0" />
          <xs:assert test="count(//Property[retailLocation]) = 0" />
          <xs:assert test="count(//Property[maintenanceCosts]) = 0" />
          <xs:assert test="count(//Property[capitalIncome]) = 0" />
          <xs:assert test="count(//Property[vacancyOperatingCosts]) = 0" />
          <xs:assert test="count(//Property[purchaseBrokerage]) = 0" />
          <xs:assert test="count(//Property[saleBrokerage]) = 0" />
          <xs:assert test="count(//Property[marketRentalValue]) = 0" />
          <xs:assert test="count(//Property[useTypeSecondary]) = 0" />
          <xs:assert test="count(//Property[netIncome]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeMain]) = 0" />
          <xs:assert test="count(//Property[purchaseNetPrice]) = 0" />
          <xs:assert test="count(//Property[saleNetPrice]) = 0" />
          <xs:assert test="count(//Property[note]) = 0" />
          <xs:assert test="count(//Property[portfolioName]) = 0" />
          <xs:assert test="count(//Property[protfolioType]) = 0" />
          <xs:assert test="count(//Property[portfolioPartName]) = 0" />
          <xs:assert test="count(//Property[propertyManager]) = 0" />
          <xs:assert test="count(//Property[purchaseLegalFees]) = 0" />
          <xs:assert test="count(//Property/address[region]) = 0" />
          <xs:assert test="count(//Property[riskStyle]) = 0" />
          <xs:assert test="count(//Property[purchaseAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property[otherCosts]) = 0" />
          <xs:assert test="count(//Property[rentalIncomeAdditional]) = 0" />
          <xs:assert test="count(//Property[saleAdditionalCosts]) = 0" />
          <xs:assert test="count(//Property[partialPurchase]) = 0" />
          <xs:assert test="count(//Property[partialSales]) = 0" />
          <xs:assert test="count(//Property[saleDate]) = 0" />
          <xs:assert test="count(//Property[fairValue]) = 0" />
          <xs:assert test="count(//Property[leasedArea]) = 0" />
          <xs:assert test="count(//Property[assetCategory]) = 0" />
          <xs:assert test="count(//Property[administrationCosts]) = 0" />
          <xs:assert test="count(//Property[valueIncreasingReconstructCosts]) = 0" />
          
          <xs:assert test="count(//Land[@objectIdSender]) = count(//Land)" />
          <xs:assert test="count(//Land[@validFrom]) = count(//Land)" />
          <xs:assert test="count(//Land[monumentProtectionCategory]) = count(//Land)" />
          <xs:assert test="count(//Land[areaMeasurement]) = count(//Land)" />
          <xs:assert test="count(//Land[plotArea]) = count(//Land)" />
          <xs:assert test="count(//Land[courtage]) = count(//Land)" />
          <xs:assert test="count(//Land/address) = count(//Land)" />
          <xs:assert test="count(//Land/address[isPublic]) = count(//Land/address)" />
          <xs:assert test="count(//Land/address[housenumber]) = count(//Land/address)" />
          <xs:assert test="count(//Land/address[street]) = count(//Land/address)" />
          <xs:assert test="count(//Land/address[zip]) = count(//Land/address)" />
          <xs:assert test="count(//Land/address[city]) = count(//Land/address)" />
          <xs:assert test="count(//Land[assetAccountType]) = 0" />
          <xs:assert test="count(//Land[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Land[ownerOccupation]) = 0" />
          <xs:assert test="count(//Land[purchaseNetPrice]) = 0" />
          <xs:assert test="count(//Land[saleNetPrice]) = 0" />
          <xs:assert test="count(//Land[propertyManager]) = 0" />
          <xs:assert test="count(//Land[riskStyle]) = 0" />
          <xs:assert test="count(//Land[fairValue]) = 0" />
                    
          <xs:assert test="count(//Building[@objectIdSender]) = count(//Building)" />
          <xs:assert test="count(//Building[@validFrom]) = count(//Building)" />
          <xs:assert test="count(//Building[numberOfRooms]) = count(//Building)" />
          <xs:assert test="count(//Building[monumentProtectionCategory]) = count(//Building)" />
          <xs:assert test="count(//Building[ownershipShare]) = count(//Building)" />
          <xs:assert test="count(//Building[areaMeasurement]) = count(//Building)" />
          <xs:assert test="count(//Building[airconditioning]) = count(//Building)" />
          <xs:assert test="count(//Building[usableArea]) = count(//Building)" />
          <xs:assert test="count(//Building[courtage]) = count(//Building)" />
          <xs:assert test="count(//Building/address) = count(//Building)" />
          <xs:assert test="count(//Building/address[isPublic]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[housenumber]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[street]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[zip]) = count(//Building/address)" />
          <xs:assert test="count(//Building/address[city]) = count(//Building/address)" />
          <xs:assert test="count(//Building[assetAccountType]) = 0" />
          <xs:assert test="count(//Building[saleGrossPrice]) = 0" />
          <xs:assert test="count(//Building[ownerOccupation]) = 0" />
          <xs:assert test="count(//Building[useTypePrimary]) = 0" />
          <xs:assert test="count(//Building[cubature]) = 0" />
          <xs:assert test="count(//Building[useTypeSecondary]) = 0" />
          <xs:assert test="count(//Building[propertyManager]) = 0" />
          <xs:assert test="count(//Building[riskStyle]) = 0" />
          <xs:assert test="count(//Building[economicConstructionDate]) = 0" />
          
          <xs:assert test="count(//Unit[@objectIdSender]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[@validFrom]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[numberOfRooms]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[titleOfExposee]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[areaMeasurement]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[courtage]) = count(//Property/Units/Unit)" />
          <xs:assert test="count(//Unit[localReferenceRent]) = 0" />
          <xs:assert test="count(//Unit/address) = 0" />
          <xs:assert test="count(//Unit[vacancyReason]) = 0" />
          <xs:assert test="count(//Unit[endPriceMaintenance]) = 0" />
          <xs:assert test="count(//Unit[useTypeCustomer]) = 0" />
          <xs:assert test="count(//Unit[propertyManager]) = 0" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
